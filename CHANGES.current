Below are the changes for the current release.
See the CHANGES file for changes in older releases.
See the RELEASENOTES file for a summary of changes in each release.
Issue # numbers mentioned below can be found on Github. For more details, add
the issue number to the end of the URL: https://github.com/swig/swig/issues/

Version 4.3.0 (in progress)
===========================

2024-02-29: erezgeva
            #2609 Fix Java typemap (const char *STRING, size_t LENGTH) to
            marshall as Java String instead of Java byte[]. If the old behaviour
            is required, replace with typemap (const void *BYTES, size_t LENGTH).
            Add multi-argument typemaps to most languages:
              (const char *STRING, size_t LENGTH)
            All languages now use a target language string type for this typemap.

            New multi-argument typemaps have been added to most target languages
            for use with C raw data (cdata):
              (const void *BYTES, size_t LENGTH) to
            Statically typed languages use a byte array for this typemap, while
            scripting languages remain using a string.

	    *** POTENTIAL INCOMPATIBILITY ***

            * Raw C data: Go uses byte array and int64 for size.
              Users can use the (const char *STRING, size_t LENGTH) typemaps for strings.

2024-02-28: wsfulton
            Fix compilation errors in generated code when instantiating a templated
            static method within a template (non-static methods and constructors were
            always okay). For example:

              template <typename T> class X {
                template <class InputIterator>
                  static void fn(InputIterator first, InputIterator last) { ... }
              };
              class SimpleIterator { ... };

              %extend X<int> {
                %template(fn) fn<SimpleIterator>;
              }
